#############################################################################################
### Build Applications
#############################################################################################

IF(BUILD_NAVIERSTOKESAPPS)
  set(NS_FOLDER NavierStokes/)
  # Steady NavierStokes
  ADD_SUBDIRECTORY(${NS_FOLDER}/SteadyNavierStokesParallel)

  # Time-dependent BE NavierStokes
  ADD_SUBDIRECTORY(${NS_FOLDER}/BackwardEulerNavierStokesParallel/)

  # Time-dependent Generalized-alpha NavierStokes
  ADD_SUBDIRECTORY(${NS_FOLDER}/TaylorGreenVortexFlowGeneralisedalpha/)

  # Steady Stokes
  ADD_SUBDIRECTORY(${NS_FOLDER}/SteadyStokes/)

  # Steady Navier Stokes steady
  ADD_SUBDIRECTORY(${NS_FOLDER}/NavierStokesTemp_AMR/)
  unset(NS_FOLDER)
ENDIF(BUILD_NAVIERSTOKESAPPS)


IF(BUILD_FSIAPPS)
  set(FSI_FOLDER FSI/)
  ADD_SUBDIRECTORY(${FSI_FOLDER})
  unset(FSI_FOLDER)
  
ENDIF(BUILD_FSIAPPS)


IF(BUILD_OPTCONTROLAPPS)
set(OPTCONTROL_FOLDER OptimalControl/)
  ADD_SUBDIRECTORY(${OPTCONTROL_FOLDER})

# MHD Optimal Control
  set(OPT_APPLICATION mhdopt)
  ADD_SUBDIRECTORY(${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/)
  FILE(MAKE_DIRECTORY ${PROJECT_BINARY_DIR}/applications/${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/input/)
  FILE(MAKE_DIRECTORY ${PROJECT_BINARY_DIR}/applications/${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/output/)
  FILE(COPY ${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/input/ DESTINATION ${PROJECT_BINARY_DIR}/applications/${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/input/)

# Temperature Optimal Control
  set(OPT_APPLICATION tempopt)
  ADD_SUBDIRECTORY(${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/)
  FILE(MAKE_DIRECTORY ${PROJECT_BINARY_DIR}/applications/${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/input/)
  FILE(MAKE_DIRECTORY ${PROJECT_BINARY_DIR}/applications/${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/output/)
  FILE(COPY ${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/input/ DESTINATION ${PROJECT_BINARY_DIR}/applications/${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/input/)

# FE test
  set(OPT_APPLICATION fe_test)
  ADD_SUBDIRECTORY(${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/)
  FILE(MAKE_DIRECTORY ${PROJECT_BINARY_DIR}/applications/${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/input/)
  FILE(MAKE_DIRECTORY ${PROJECT_BINARY_DIR}/applications/${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/output/)
  FILE(COPY ${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/input/ DESTINATION ${PROJECT_BINARY_DIR}/applications/${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/input/)
  
# lift_restr
  set(OPT_APPLICATION elliptic_lift_restr)
  ADD_SUBDIRECTORY(${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/)
  
# lift_restr_neum
  set(OPT_APPLICATION elliptic_lift_restr_neum)
  ADD_SUBDIRECTORY(${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/)
  
# boundary
  set(OPT_APPLICATION elliptic_bdry_dir)
  ADD_SUBDIRECTORY(${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/)
  
# boundary Neumann
  set(OPT_APPLICATION elliptic_bdry_neum)
  ADD_SUBDIRECTORY(${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/)

# lift_restr_bdd_ctrl
  set(OPT_APPLICATION elliptic_lift_restr_bdd_ctrl)
  ADD_SUBDIRECTORY(${OPTCONTROL_FOLDER}/${OPT_APPLICATION}/)
  
  unset(OPT_APPLICATION)  

ENDIF(BUILD_OPTCONTROLAPPS)

IF(BUILD_POISSON)
  ADD_SUBDIRECTORY(Poisson/)
ENDIF(BUILD_POISSON)

IF(BUILD_POISSON_AMR)
  ADD_SUBDIRECTORY(Poisson_AMR/)
ENDIF(BUILD_POISSON_AMR)

IF(BUILD_TUTORIAL)
  ADD_SUBDIRECTORY(tutorial/)
ENDIF(BUILD_TUTORIAL)

IF(BUILD_WILLMORE)
  ADD_SUBDIRECTORY(Willmore/)
ENDIF(BUILD_WILLMORE)

IF(BUILD_MGAMR)
  ADD_SUBDIRECTORY(MGAMR)
ENDIF(BUILD_MGAMR)

IF(BUILD_PCFIELDSPLIT)
  ADD_SUBDIRECTORY(PCFieldSplit)
ENDIF(BUILD_PCFIELDSPLIT)

IF(BUILD_AMR)
  ADD_SUBDIRECTORY(AMR)
ENDIF(BUILD_AMR)
